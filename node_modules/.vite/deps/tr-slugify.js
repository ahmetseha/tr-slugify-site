import {
  __commonJS
} from "./chunk-5WWUZCGV.js";

// node_modules/tr-slugify/dist/index.js
var require_dist = __commonJS({
  "node_modules/tr-slugify/dist/index.js"(exports) {
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.trSlugify = trSlugify;
    exports.trSlugifyMultiple = trSlugifyMultiple;
    exports.trSlugifyUnique = trSlugifyUnique;
    var TURKISH_CHAR_MAP = {
      ç: "c",
      Ç: "C",
      ğ: "g",
      Ğ: "G",
      ı: "i",
      I: "I",
      İ: "I",
      ö: "o",
      Ö: "O",
      ş: "s",
      Ş: "S",
      ü: "u",
      Ü: "U"
    };
    function trSlugify(text, options = {}) {
      const { separator = "-", lowercase = true, removeSpecialChars = true, collapseSeparators = true, trimSeparators = true } = options;
      if (!text || typeof text !== "string") {
        return "";
      }
      let result = text;
      for (const [turkishChar, englishChar] of Object.entries(TURKISH_CHAR_MAP)) {
        result = result.replace(new RegExp(turkishChar, "g"), englishChar);
      }
      if (lowercase) {
        result = result.toLowerCase();
      }
      if (removeSpecialChars) {
        result = result.replace(/[^a-zA-Z0-9\s]/g, separator);
      }
      result = result.replace(/\s+/g, separator);
      if (collapseSeparators) {
        const separatorRegex = new RegExp(`${escapeRegExp(separator)}+`, "g");
        result = result.replace(separatorRegex, separator);
      }
      if (trimSeparators) {
        const separatorRegex = new RegExp(`^${escapeRegExp(separator)}+|${escapeRegExp(separator)}+$`, "g");
        result = result.replace(separatorRegex, "");
      }
      return result;
    }
    function escapeRegExp(string) {
      return string.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
    }
    function trSlugifyMultiple(texts, options = {}) {
      return texts.map((text) => trSlugify(text, options));
    }
    function trSlugifyUnique(text, existingSlugs = [], options = {}) {
      let slug = trSlugify(text, options);
      let counter = 1;
      let uniqueSlug = slug;
      while (existingSlugs.includes(uniqueSlug)) {
        uniqueSlug = `${slug}-${counter}`;
        counter++;
      }
      return uniqueSlug;
    }
    exports.default = trSlugify;
  }
});
export default require_dist();
//# sourceMappingURL=tr-slugify.js.map
